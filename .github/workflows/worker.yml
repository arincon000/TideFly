name: Surf Flight Worker

on:
  schedule:
    - cron: "5 * * * *"         # hourly at :05 UTC
  workflow_dispatch:            # allow manual runs from the UI
  push:
    branches: [ main ]          # optional
  pull_request:
    branches: [ main ]          # optional

jobs:
  run:
    runs-on: ubuntu-latest

    # avoid overlapping runs
    concurrency:
      group: surf-flight-worker-${{ github.ref }}
      cancel-in-progress: true

    timeout-minutes: 20
    permissions:
      contents: read

    # ðŸ”‘ Map GitHub secrets into environment for all steps
    env:
      SUPABASE_URL:            ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_KEY:    ${{ secrets.SUPABASE_SERVICE_KEY }}
      RESEND_API_KEY:          ${{ secrets.RESEND_API_KEY }}
      EMAIL_FROM:              ${{ secrets.EMAIL_FROM }}
      ENABLE_AFFILIATES:       ${{ secrets.ENABLE_AFFILIATES }}
      AVIA_AFFILIATE_ID:       ${{ secrets.AVIA_AFFILIATE_ID }}
      ENABLE_HOTEL_CTA:        ${{ secrets.ENABLE_HOTEL_CTA }}
      TP_P_HOTELLOOK:          ${{ secrets.TP_P_HOTELLOOK }}
      AMADEUS_ENV:             ${{ secrets.AMADEUS_ENV }}
      AMADEUS_MODE:            ${{ secrets.AMADEUS_MODE }}
      AMADEUS_FAKE_PRICE:      ${{ secrets.AMADEUS_FAKE_PRICE }}
      AMADEUS_CLIENT_ID:       ${{ secrets.AMADEUS_CLIENT_ID }}
      AMADEUS_CLIENT_SECRET:   ${{ secrets.AMADEUS_CLIENT_SECRET }}
      ENABLE_FORECAST_CHECK:   ${{ secrets.ENABLE_FORECAST_CHECK }}
      DRY_RUN:                 ${{ secrets.DRY_RUN }}
      PYTHONUNBUFFERED:        '1'
      PIP_DISABLE_PIP_VERSION_CHECK: '1'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: worker/requirements.txt

      # ðŸ§¹ Strip CR/LF and trim quotes/spaces that can break HTTP headers/URL parsing
      - name: Normalize secrets (strip CR/LF + trim)
        shell: bash
        run: |
          norm() { printf %s "$1" \
            | tr -d '\r\n' \
            | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' \
                  -e 's/^"//' -e 's/"$//' -e "s/^'//" -e "s/'$//"; }
          echo "SUPABASE_URL=$(norm "$SUPABASE_URL")" >> $GITHUB_ENV
          echo "SUPABASE_SERVICE_KEY=$(norm "$SUPABASE_SERVICE_KEY")" >> $GITHUB_ENV
          echo "RESEND_API_KEY=$(norm "$RESEND_API_KEY")" >> $GITHUB_ENV

      # âœ… Safe sanity check (doesn't leak secrets)
      - name: Sanity check required secrets
        shell: bash
        run: |
          python - <<'PY'
          import os, urllib.parse as u
          url = os.getenv("SUPABASE_URL","")
          key = os.getenv("SUPABASE_SERVICE_KEY","")
          p = u.urlparse(url)
          print("URL present:", bool(url))
          print("URL head repr:", repr(url[:16]))
          print("scheme:", p.scheme, "netloc_ok:", bool(p.netloc), "is_supabase:", ("supabase." in p.netloc))
          print("SERVICE_KEY length:", len(key))
          assert p.scheme == "https" and p.netloc, "Bad SUPABASE_URL"
          assert key, "Missing SUPABASE_SERVICE_KEY"
          PY

      - run: python -m pip install --upgrade pip
      - run: pip install -r worker/requirements.txt

      - name: Run worker (unbuffered)
        run: python -u -m worker.core_worker
